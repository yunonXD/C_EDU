배열과 리스트

    둘 다 기본 자료구조


배열
    메모리의 연속 공간에 값이 채워져 있는 자료구조
    인덱스를 통해 참조
    선언한 자료형의 값만 저장

    배열 특징
        인덱스를 사용해 값에 바로 접근
        새로운 값을 삽입하거나 특정 인덱스에 있는 값을 삭제하기 어려움
        값을 삽입 ,삭제하려면 해당 인덱스 주변값을 이동하는 추가 작업이 필요
        배열의 크기는 선언할 때 지정 가능하며 한번 선언하면 늘리거나 줄이기가 불가능함
        구조가 아주 간단해서 코테에서 자주 사용함
------------------------------------------------

리스트
    값과 포인터를 묶은 노드라는것을 연결한 자료구조
    노드 > 값,포인터를 쌍으로 갖는 기초 단위를 의미

    리스트 특징
        인덱스가 없어서 값에 접근할 때 head 포인터부터 차례대로 접근해야함
        데이터의 삽입 삭제가 아주 빠름 (포인터로 연결되어 있으므로)
        선언할 때 별도의 크기 지정이 불필요
        포인터는 저장할 공간(동적할당)이 필요하므로 구조가 복잡
------------------------------------------------


벡터
    C++ 표준 라이브러리에 있느 자료구조 컨테이너중 하나
    기존 배열과 같은 특징을 가지면서 단점을 보안하는 동적 배열의 형태

    벡터 특징
        동적으로 원소를 추가할 수 있음 (크기가 자동으로 늘어남)
        맨 마지막 위치에 데이터를 삽입하거나 삭제할 때는 문제가 없으나 중간 데이터의 삽입 삭제는 배열과 똑같이 작동함
        배열과 똑같이 인덱스를 이용하여 각 데이터에 직접 접근 가능
        ------------------------------------------------


