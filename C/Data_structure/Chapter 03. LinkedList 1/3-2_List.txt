리스트의 이해
==============================

리스트의 구분
    - 순차 리스트 : 배열을 기반으로 구현된 리스트
    - 연결 리스트 : 메모리의 동적 할당을 기반으로 구현된 리스트

    이는 구현 방법을 기준으로 한 구분이며 이 두 리스트의 ADT 는 동일하다고 해서 문제되는건 아님

리스트의 특징
    - 저장 형태 : 데이터를 나란히 -일렬- 저장
    - 저장 특성 : 중복이 되는 데이터의 저장을 허용

    이것이 리스트 ADT 를 정의함에 있어서 고려해야 할 내용


리스트의 자료구조 ADT
==============================

void ListInint(List *plist);        리스트 초기화
    - 초기화 할 리스트의 주소 값을 인자로 전달
    - 리스트 생성 후 제일 먼저 호출되어야 하는 함수

void LInsert(List *plist, LData * data);        데이터 저장
    - 리스트에 데이터를 저장, 매개변수 data 에 전달된 값을 저장

int LFirst(List *plist , Ldata *pdata);       데이터 탐색 및 초기화
    - 첫 번째 데이터가 pdata 가 가리키는 메모리에 저장
    - 데이터의 참조를 위한 초기화가 진행
    - 참조 성공시 1 true, 실패시 0 false 를 리턴

int LNext(List *plist, Ldata *pdata);
    - 참조된 데이터의 다음 데이터가 pdata 가 가리키는 메모리에 저장
    - 순차적인 참조를 위해서 반복 호출 가능
    - 참조를 새로 시작하려면 먼저 LFirst 함수를 호출해야함
    - 참조 성공시 1 true, 실패시 0 false 를 리턴

LData LRemove(List *plist);
    - LFirst 또는 LNext 함수의 마지막 반환 데이터를 삭제
    - 삭제된 데이터는 반환된다
    - 마지막 반환 데이터를 삭제하므로 연이은 반복 호출을 허용하지 않음

int LCount(List *plist);
    - 리스트에 저장되어 있는 데이터의 수를 반환


