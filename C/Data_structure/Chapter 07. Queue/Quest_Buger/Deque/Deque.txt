
덱*Deque 

약 쪽 끝으로 넣고 뺄 수 있다

    덱의 모양
    --------
  <-         ->
  ->         <-
    --------
개별 연산이 가능함. 꼭 pair 를 이룰 필요는 없음.

스택으로 사용할 수 도 있고
한쪽만 넣고 한쪽만 뺀다면 Queue로 사용도 가능함. 특성을 동시에 가짐.
But 그렇다고 queue는 아님. stack 도 아님.


    덱의 ADT
    - void DequeIntit(Deque *pdeq);
        - 덱의 초기화
        - 가장 먼저 호출
    
    - int DQIsEmpty(Deque *pdeq);
        - 덱이 비었으면 1 아니면 0

    - void DQAddFirst(Deque *pdeq, Data data);
        - 덱 머리에 데이터 저장,data 전달

    - void DQAddLast(Deque *pdeq, Data data);
        - 덱의 꼬리에 데이터 저장, data 전달

    - void DQRemoveFirst(Deque *pdeq);
        - 덱의 머리에 위치한 데이터 리턴 및 소멸

    - Data DQRemoveLast(Deque *pdeq);
        - 덱의 꼬리에 위치한 데이터 리턴 및 소멸

    - Data DQGetFirst(Deque *pdeq);
        - 덱의 머리에 위치한 데이터를 peek

    - Data DQGetLast(Deque *pdeq);
        - 덱의 꼬리에 위치한 데이터를 peek


